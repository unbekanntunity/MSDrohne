#:kivy 2.0.0

<RoundedButton@Button>:
    background_color: (0,0,0,0)
	background_normal: ''
	canvas.before:
		Color:
            rgba: app.configuration.config_dict['app']['themes'][app.current_theme]['btn_color_not_pressed']['value'] if self.state=='normal' else app.configuration.config_dict['app']['themes'][app.current_theme]['btn_color_pressed']['value']
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [20]

<StartScreen>:
    name: 'start'
    AnchorLayout:
        padding: 20
        anchor_x: 'left'
        anchor_y: 'top'
        RoundedButton:
            size_hint_x: None
            size_hint_y: None
            text: app.bind_text(self, 'Settings', 'Settings')
            on_release: root.manager.current = 'appSettings'
    BoxLayout:
        orientation: 'vertical'
        padding: 50
        Label:
            id: title
            markup: True
            text: "[font=./data/fonts/Roboto-Thin]Welcome[/font]"
            font_family: './data/fonts/Roboto-Thin.ttf'
            font_size: '80'
            color: app.configuration.config_dict['app']['themes'][app.current_theme]['font_color']['value']
        BoxLayout:
            orientation: 'vertical'
            spacing: 40
            padding: root.width / 4, 20, root.width / 4, 20
            RoundedButton:
                text: app.bind_text(self, 'Find device', 'Find device')
                on_release: root.manager.current = 'connection'
            RoundedButton:
                text: app.bind_text(self, 'Support', 'Support')
                on_release: root.manager.current = 'support'
    AnchorLayout:
        anchor_x: 'left'
        anchor_y: 'bottom'
        Label:
            size_hint_x: None
            size_hint_y: None
            text: 'version: ' + app.__version__
            color: app.configuration.config_dict['app']['themes'][app.current_theme]['font_color']['value']

<AppSettings>
    orientation: 'vertical'
    spacing: 10
    BoxLayout:
        Label:
            text: app.bind_text(self, 'Color theme', 'Color theme:')
            color: app.configuration.config_dict['app']['themes'][app.current_theme]['font_color']['value']
        Spinner:
            id: color_spinner
    BoxLayout:
        Label:
            text: app.bind_text(self, 'Language', 'Language:')
            color: app.configuration.config_dict['app']['themes'][app.current_theme]['font_color']['value']
        Spinner:
            id: language_spinner
    BoxLayout:
        Label:
            text: app.bind_text(self, 'Test', 'Test:')
            state: 'down' if app.configuration.config_dict['app']['testcase'] else 'normal'
        ToggleButton:
            size_hint_x: 0.5
            text: app.bind_text(self, 'Off', 'Off')
            state: 'down' if root.current_test_mode is False else 'normal'
            group: 'testmode'
            on_release: root.current_test_mode = False
        ToggleButton:
            size_hint_x: 0.5
            text: app.bind_text(self, 'On', 'On')
            state: 'down' if root.current_test_mode else 'normal'
            group: 'testmode'
            on_release: root.current_test_mode = True
    BoxLayout:
        Label:
            text: app.bind_text(self, 'Swipe distance', 'Swipe distance:')
        NumericTextInput:
            number_range: (0, 1000)
            id: swipe_distance_text_input
            text: str(app.configuration.config_dict['app']['swipe_distance'])

<AppSettingsScreen>
    name: 'appSettings'
    app_settings: app_settings
    AnchorLayout:
        padding: 20
        anchor_x: 'left'
        anchor_y: 'top'
        RoundedButton:
            size_hint_x: None
            size_hint_y: None
            text: app.bind_text(self, 'Return', 'Return')
            on_release: root.go_back('start')
    AnchorLayout:
        ScrollView:
            size_hint_x: 0.75
            size_hint_y: 0.7
            canvas.before:
                Color:
                    rgba: app.configuration.config_dict['app']['themes'][app.current_theme]['font_color']['value']
                Line:
                    width: 1
                    rectangle: self.x, self.y, self.width, self.height
            BoxLayout:
                orientation: 'vertical'
                size_hint_y: None
                height: 700
                padding: 20
                spacing: 20
                Label:
                    text: app.bind_text(self, 'Settings', 'Settings')
                    font_size: 40
                    size_hint_y: None
                    color: app.configuration.config_dict['app']['themes'][app.current_theme]['font_color']['value']
                AppSettings:
                    id: app_settings
                AnchorLayout:
                    anchor_x: 'center'
                    anchor_y: 'center'
                    Button:
                        size_hint: (.5, .3)
                        text: app.bind_text(self, 'Save', 'Save')
                        on_release: root.save_config()

<SupportScreen>:
    name: 'support'
    AnchorLayout:
        padding: 20
        anchor_x: 'left'
        anchor_y: 'top'
        RoundedButton:
            size_hint_x: None
            size_hint_y: None
            text: app.bind_text(self, 'Return', 'Return')
            on_release: root.go_back('start')
    AnchorLayout:
        ScrollView:
            size_hint_x: 0.75
            size_hint_y: 0.8
            orientation: 'vertical'
            padding: 20
            canvas.before:
                Color:
                    rgba: app.configuration.config_dict['app']['themes'][app.current_theme]['font_color']['value']
                Line:
                    width: 1
                    rectangle: self.x, self.y, self.width, self.height
            BoxLayout:
                id: question_box
                padding: 20
                size_hint_y: None
                orientation: 'vertical'

<ConnectionScreen>:
    name: 'connection'
    status: status_label
    AnchorLayout:
        size_hint_x: None
        anchor_x: 'left'
        anchor_y: 'top'
        padding: 20
        RoundedButton:
            size_hint_x: None
            size_hint_y: None
            text: app.bind_text(self, 'Return', 'Return')
            on_press: root.go_back('start')
    AnchorLayout:
        AnchorLayout:
            size_hint: (.6, .3)
            canvas.before:
                Color:
                    rgba: app.configuration.config_dict['app']['themes'][app.current_theme]['font_color']['value']
                Line:
                    width: 0.5
                    rectangle: self.x, self.y, self.width, self.height
            Label:
                id: status_label

<ControlScreen>:
    name: 'control'
    AnchorLayout:
        anchor_y: 'top'
        BoxLayout:
            id: top_a
            spacing: 30
            size_hint_y: None
            height: root.height / 6
            RoundedButton:
                id: back_btn
                text: app.bind_text(self, 'Return', 'Return')
                on_press: root.go_back('start')
            Label:
                text: root.status
                color: app.configuration.config_dict['app']['themes'][app.current_theme]['font_color']['value']
            RoundedButton:
                text: app.bind_text(self, 'Menu', 'Menu')
                on_press: root.manager.current = 'settings'
    AnchorLayout:
        pos: 0, -100
        padding: 20
        anchor_x: 'right'
        anchor_y: 'top'
        orientation: 'horizontal'
        RoundedButton:
            size_hint_x: None
            size_hint_y: None
            text: 'set'
            on_release: root.set_waypoint()
    BoxLayout:
        pos: 0, -100
        id: joystick_a
        orientation: 'horizontal'
    AnchorLayout:
        anchor_y: 'bottom'
        BoxLayout:
            size_hint_y: None
            height: root.height / 6
            Label:
                text: f'H: {root.altitude} \nS: {root.speed}'
                color: app.configuration.config_dict['app']['themes'][app.current_theme]['font_color']['value']
            Label:
                text: f'Lo: {root.latitude} \nLa: {root.longitude}'
                color: app.configuration.config_dict['app']['themes'][app.current_theme]['font_color']['value']
            Label:
                text: f'{root.battery}%'
                color: app.configuration.config_dict['app']['themes'][app.current_theme]['font_color']['value']
            Label:
                text: f'{root.esp_connection}'
                color: app.configuration.config_dict['app']['themes'][app.current_theme]['font_color']['value']

<SettingsScreen>:
    app_settings: app_settings
    name: 'settings'
    AnchorLayout:
        padding: 20
        anchor_x: 'left'
        anchor_y: 'top'
        RoundedButton:
            size_hint_x: None
            size_hint_y: None
            text: 'back'
            on_release: root.close_menu()
    AnchorLayout:
        ScrollView:
            size_hint_x: 0.75
            size_hint_y: 0.6
            canvas.before:
                Color:
                    rgba: app.configuration.config_dict['app']['themes'][app.current_theme]['font_color']['value']
                Line:
                    width: 1
                    rectangle: self.x, self.y, self.width, self.height
            BoxLayout:
                orientation: 'vertical'
                size_hint_y: None
                height: 800
                padding: 20
                spacing: 20
                Label:
                    text: app.bind_text(self, 'Settings', 'Settings')
                    color: app.configuration.config_dict['app']['themes'][app.current_theme]['font_color']['value']
                BoxLayout:
                    Label:
                        text: app.bind_text(self, 'Ticks', 'Ticks:')
                        color: app.configuration.config_dict['app']['themes'][app.current_theme]['font_color']['value']
                    NumericTextInput:
                        id: tick_field
                        filter_type: 'int'
                        multiline: False
                AppSettings:
                    id: app_settings
                AnchorLayout:
                    anchor_x: 'center'
                    anchor_y: 'center'
                    Button:
                        size_hint: (.5, .3)
                        text: app.bind_text(self, 'Save', 'Save')
                        on_release: root.save_config()

<WaypointsScreen>:
    name: 'waypoints'
    AnchorLayout:
        padding: 20
        anchor_x: 'left'
        anchor_y: 'top'
        RoundedButton:
            size_hint_x: None
            size_hint_y: None
            text: 'back'
            on_release: root.close_menu()
    AnchorLayout:
        anchor_x: 'center'
        anchor_y: 'top'
        FloatLayout:
            size_hint_y: .2
            Label:
                pos_hint: {'x':  .45, 'y': 0}
                size_hint: (None, None)
                text: app.bind_text(self, 'Waypoints', 'Waypoints')
                font_size: 50
            RoundedButton:
                pos_hint: {'x':  .8, 'y': .25}
                size_hint: (None, .5)
                text: 'clear'
                on_release: root.go_back_to_menu()
    AnchorLayout:
        anchor_y: 'bottom'
        size_hint_y: 0.8
        canvas.before:
            Color:
                rgba: app.configuration.config_dict['app']['themes'][app.current_theme]['font_color']['value']
            Line:
                width: 1
                rectangle: self.x, self.y, self.width, self.height
        ScrollView:
            BoxLayout:
                id: list_area
                orientation: 'vertical'
                size_hint_y: None
                height: root.get_height()


<DroneRoot>:
    canvas.before:
		Color:
			rgba: app.configuration.config_dict['app']['themes'][app.current_theme]['bg_color']['value']
		Rectangle:
			pos: self.pos
			size: self.size
    BoxLayout:
        orientation: 'vertical'
        MyScreenManager:
            id: sm
            StartScreen
            AppSettingsScreen
            ConnectionScreen
            ControlScreen
            SettingsScreen
            WaypointsScreen
            SupportScreen
        BoxLayout:
            id: nav_bar
            size_hint_y: None
            height: 0